version: '3.4'

# Uses let's encrypt SSL with a reverse proxy to expose web
# apps on a single host. Uses subdomains for different
# user-facing services.

services:

  web.ui:
    environment:
      - VIRTUAL_HOST=${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - ASPNETCORE_ENVIRONMENT=${DOTNET_ENV}
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - IdentityUrl= http://${GPP_EXTERNAL_DNS_NAME_OR_IP}:80
      - CallBackUrl=http://${GPP_EXTERNAL_DNS_NAME_OR_IP}:80

  web.api:
    environment:
      - VIRTUAL_HOST=api.${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=api.${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - ASPNETCORE_ENVIRONMENT=${DOTNET_ENV}
      - ASPNETCORE_URLS=http://0.0.0.0:80

  identity.api:
    environment:
      - VIRTUAL_HOST=identity.${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=identity.${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - ConnectionStrings__UserConnection=Server=tcp:${USER_SQL_HOST},1433;Initial Catalog=${USER_SQL_DB};Persist Security Info=False;User ID=${USER_SQL_USER};Password=${USER_SQL_PASSWORD};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;
      - ASPNETCORE_ENVIRONMENT=${DOTNET_ENV}
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - WebsiteUrl=http://${GPP_EXTERNAL_DNS_NAME_OR_IP}:80

  webapigw:
    ports:
      - "5202:80"

  core.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=${DOTNET_ENV}

  core.eventstore:
    environment:
      - VIRTUAL_HOST=eventstore.${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - VIRTUAL_PORT=2113
      - LETSENCRYPT_HOST=eventstore.${GPP_EXTERNAL_DNS_NAME_OR_IP}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - EVENTSTORE_DEV=false
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /data/eventstore-data
      - type: volume
        source: eventstore-volume-index
        target: /data/eventstore-index
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

  core.readmodel:
    volumes:
      - redis_data:/data/redis

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    depends_on:
      - identity.api
      - web.api
      - web.ui
      - core.eventstore
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy

volumes:
  conf:
  vhost:
  html:
  certs:
  acme: